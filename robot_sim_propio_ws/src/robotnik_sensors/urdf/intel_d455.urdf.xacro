<?xml version="1.0"?>

<!--
License: Apache 2.0. See LICENSE file in root directory.
Copyright(c) 2017 Intel Corporation. All Rights Reserved
This is the URDF model for the Intel RealSense 430 camera, in its
aluminum peripherial evaluation case.
--> 

<robot name="sensor_intel_d455" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:macro name="sensor_intel_d455" params="prefix parent *origin prefix_topic:='front_rgbd_camera' use_nominal_extrinsics:=true update_rate:=7">
    <xacro:property name="M_PI" value="3.1415926535897931" />

    <!-- The following values are approximate, and the camera node
     publishing TF values with actual calibrated camera extrinsic values -->
    <xacro:property name="d455_cam_depth_to_infra1_offset" value="0.0"/>
    <xacro:property name="d455_cam_depth_to_infra2_offset" value="-0.095"/>
    <xacro:property name="d455_cam_depth_to_color_offset" value="-0.059"/>


    <!-- The following values model the aluminum peripherial case for the
  	d455 camera, with the camera joint represented by the actual
  	peripherial camera tripod mount -->
    <xacro:property name="d455_cam_width" value="0.124"/>
    <xacro:property name="d455_cam_height" value="0.029"/>
    <xacro:property name="d455_cam_depth" value="0.026"/>
    <xacro:property name="d455_cam_mount_from_center_offset" value="0.0158"/>
    <!-- glass cover is 0.1 mm inwards from front aluminium plate -->
    <xacro:property name="d455_glass_to_front" value="0.1e-3"/>
    <!-- see datasheet Revision 009, Fig. 4-4 page 68 -->
    <xacro:property name="d455_zero_depth_to_glass" value="4.55e-3"/>
    <!-- convenience precomputation to avoid clutter-->
    <xacro:property name="d455_mesh_x_offset" value="${d455_cam_mount_from_center_offset-d455_glass_to_front-d455_zero_depth_to_glass}"/>

    <!-- The following offset is relative to the physical d455 camera peripherial
  	camera tripod mount -->
    <xacro:property name="d455_cam_depth_px" value="${d455_cam_mount_from_center_offset}"/>
    <xacro:property name="d455_cam_depth_py" value="0.0475"/>
    <xacro:property name="d455_cam_depth_pz" value="${d455_cam_height/2}"/>

    <!-- camera body, with origin at bottom screw mount -->
    <joint name="${prefix}_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${parent}"/>
      <child link="${prefix}_bottom_screw_frame" />
    </joint>
    <link name="${prefix}_bottom_screw_frame"/>

    <joint name="${prefix}_link_joint" type="fixed">
      <origin xyz="${d455_mesh_x_offset} ${d455_cam_depth_py} ${d455_cam_depth_pz}" rpy="0 0 0"/>
      <parent link="${prefix}_bottom_screw_frame"/>
      <child link="${prefix}_link" />
    </joint>

    <link name="${prefix}_link">
      <visual>
        <!-- the mesh origin is at front plate in between the two infrared camera axes -->
        <!-- <origin xyz="${d455_zero_depth_to_glass-d455_cam_depth/2} ${-d455_cam_depth_py} 0" rpy="0 0 0"/> -->
        <origin xyz="${d455_zero_depth_to_glass + d455_glass_to_front} ${-d455_cam_depth_py} 0" rpy="${M_PI/2} 0 ${M_PI/2}"/>
        <geometry>
           <!--box size="${d455_cam_depth} ${d455_cam_width} ${d455_cam_height}"/> 
	        <mesh filename="package://realsense2_description/meshes/d455.stl" scale="0.001 0.001 0.001" />-->
<mesh filename="package://robotnik_sensors/meshes/intel_d435.dae" />
        </geometry>
        <material name="aluminum"/>
      </visual>
      <collision>
        <origin xyz="${d455_zero_depth_to_glass-d455_cam_depth/2} ${-d455_cam_depth_py} 0" rpy="0 0 0"/>
        <geometry>
          <box size="${d455_cam_depth} ${d455_cam_width} ${d455_cam_height}"/>
        </geometry>
      </collision>
      <inertial>
        <!-- The following are not reliable values, and should not be used for modeling -->
        <mass value="0.072" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.003881243" ixy="0.0" ixz="0.0" iyy="0.000498940" iyz="0.0" izz="0.003879257" />
      </inertial>
    </link>

    <!-- Use the nominal extrinsics between camera frames if the calibrated extrinsics aren't being published. e.g. running the device in simulation  -->
    <xacro:if value="${use_nominal_extrinsics}">
      <!-- camera depth joints and links -->
      <joint name="${prefix}_depth_joint" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <parent link="${prefix}_link"/>
        <child link="${prefix}_depth_frame" />
      </joint>
      <link name="${prefix}_depth_frame"/>

      <joint name="${prefix}_depth_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
        <parent link="${prefix}_depth_frame" />
        <child link="${prefix}_depth_optical_frame" />
      </joint>
      <link name="${prefix}_depth_optical_frame"/>

      <!-- camera left IR joints and links -->
      <joint name="${prefix}_infra1_joint" type="fixed">
        <origin xyz="0 ${d455_cam_depth_to_infra1_offset} 0" rpy="0 0 0" />
        <parent link="${prefix}_link" />
        <child link="${prefix}_infra1_frame" />
      </joint>
      <link name="${prefix}_infra1_frame"/>

      <joint name="${prefix}_infra1_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
        <parent link="${prefix}_infra1_frame" />
        <child link="${prefix}_infra1_optical_frame" />
      </joint>
      <link name="${prefix}_infra1_optical_frame"/>

      <!-- camera right IR joints and links -->
      <joint name="${prefix}_infra2_joint" type="fixed">
        <origin xyz="0 ${d455_cam_depth_to_infra2_offset} 0" rpy="0 0 0" />
        <parent link="${prefix}_link" />
        <child link="${prefix}_infra2_frame" />
      </joint>
      <link name="${prefix}_infra2_frame"/>

      <joint name="${prefix}_infra2_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
        <parent link="${prefix}_infra2_frame" />
        <child link="${prefix}_infra2_optical_frame" />
      </joint>
      <link name="${prefix}_infra2_optical_frame"/>

      <!-- camera color joints and links -->
      <joint name="${prefix}_color_joint" type="fixed">
        <origin xyz="0 ${d455_cam_depth_to_color_offset} 0" rpy="0 0 0" />
        <parent link="${prefix}_link" />
        <child link="${prefix}_color_frame" />
      </joint>
      <link name="${prefix}_color_frame"/>

      <joint name="${prefix}_color_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
        <parent link="${prefix}_color_frame" />
        <child link="${prefix}_color_optical_frame" />
      </joint>
      <link name="${prefix}_color_optical_frame"/>
      
      <!-- IMU -->
      <!-- see datasheet Revision 009, page 114 -->
      <xacro:property name="d455_imu_px" value="-0.01602"/>
      <xacro:property name="d455_imu_py" value="-0.03022"/>
      <xacro:property name="d455_imu_pz" value="+0.0074"/>

      <link name="${prefix}_accel_frame" />
      <link name="${prefix}_accel_optical_frame" />
      <link name="${prefix}_gyro_frame" />
      <link name="${prefix}_gyro_optical_frame" />
      <link name="${prefix}_imu_optical_frame" />

      <joint name="${prefix}_accel_joint" type="fixed">
        <origin xyz = "${d455_imu_px} ${d455_imu_py} ${d455_imu_pz}" rpy = "0 0 0" />
        <parent link="${prefix}_link" />
        <child link="${prefix}_accel_frame" />
      </joint>

      <joint name="${prefix}_accel_optical_joint" type="fixed">
        <origin xyz = "0 0 0" rpy = "${-M_PI/2} 0 ${-M_PI/2}" />
        <parent link="${prefix}_accel_frame" />
        <child link="${prefix}_accel_optical_frame" />
      </joint>

      <joint name="${prefix}_gyro_joint" type="fixed">
        <origin xyz = "${d455_imu_px} ${d455_imu_py} ${d455_imu_pz}" rpy = "0 0 0" />
        <parent link="${prefix}_link" />
        <child link="${prefix}_gyro_frame" />
      </joint>

      <joint name="${prefix}_gyro_optical_joint" type="fixed">
        <origin xyz = "0 0 0" rpy = "${-M_PI/2} 0 ${-M_PI/2}" />
        <parent link="${prefix}_gyro_frame" />
        <child link="${prefix}_gyro_optical_frame" />
      </joint>

      <joint name="${prefix}_imu_optical_joint" type="fixed">
        <origin xyz = "0 0 0" rpy = "0 0 0" />
        <parent link="${prefix}_gyro_optical_frame" />
        <child link="${prefix}_imu_optical_frame" />
      </joint>
    </xacro:if>
  </xacro:macro>


  <xacro:macro name="gazebo_d435" params="camera_name reference_link topics_ns depth_optical_frame color_optical_frame infrared1_optical_frame infrared2_optical_frame update_rate" >
   <!-- Load parameters to model's main link-->
   <xacro:property name="deg_to_rad" value="0.01745329251994329577" />
   <gazebo reference="${reference_link}">
     <self_collide>0</self_collide>
     <enable_wind>0</enable_wind>
     <kinematic>0</kinematic>
     <gravity>1</gravity>
     <!--<mu>1</mu>-->
     <mu2>1</mu2>
     <fdir1>0 0 0</fdir1>
     <!--<slip1>0</slip1>
     <slip2>0</slip2>-->
     <kp>1e+13</kp>
     <kd>1</kd>
     <!--<max_vel>0.01</max_vel>
     <min_depth>0</min_depth>-->
     <sensor name="${camera_name}color" type="camera">
       <camera name="${camera_name}">
         <horizontal_fov>${69.4*deg_to_rad}</horizontal_fov>
         <image>
           <width>1920</width>
           <height>1080</height>
           <format>RGB_INT8</format>
         </image>
         <clip>
           <near>0.1</near>
           <far>100</far>
         </clip>
         <noise>
           <type>gaussian</type>
           <mean>0.0</mean>
           <stddev>0.007</stddev>
         </noise>
       </camera>
       <always_on>1</always_on>
       <update_rate>${update_rate}</update_rate>
       <visualize>0</visualize>

       <plugin name="${prefix}kortex_vision_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>${update_rate}</updateRate>
          <cameraName>${camera_name}_color</cameraName>
          <imageTopicName>/${camera_name}/${prefix_topic}/rgb/image_raw</imageTopicName>
          <cameraInfoTopicName>/${camera_name}/${prefix_topic}/rgb/camera_info</cameraInfoTopicName>
          <frameName>/${prefix}_color_optical_frame</frameName>
          <!-- this is just which name the Image msg will have, it does not affect the simulation.
                However must be set to the optical_frame,  -->
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
          <ignoreTfPrefix>1</ignoreTfPrefix>
        </plugin>

     </sensor>
     <sensor name="${camera_name}ired1" type="camera">
       <camera name="${camera_name}">
         <horizontal_fov>${85.2*deg_to_rad}</horizontal_fov>
         <image>
           <width>1280</width>
           <height>720</height>
           <format>L_INT8</format>
         </image>
         <clip>
           <near>0.1</near>
           <far>100</far>
         </clip>
         <noise>
           <type>gaussian</type>
           <mean>0.0</mean>
           <stddev>0.05</stddev>
         </noise>
       </camera>
       <always_on>1</always_on>
       <update_rate>${update_rate}</update_rate>
       <visualize>0</visualize>
     </sensor>
     <sensor name="${camera_name}ired2" type="camera">
       <camera name="${camera_name}">
         <horizontal_fov>${85.2*deg_to_rad}</horizontal_fov>
         <image>
           <width>1280</width>
           <height>720</height>
           <format>L_INT8</format>
         </image>
         <clip>
           <near>0.1</near>
           <far>100</far>
         </clip>
         <noise>
           <type>gaussian</type>
           <mean>0.0</mean>
           <stddev>0.05</stddev>
         </noise>
       </camera>
       <always_on>1</always_on>
       <update_rate>${update_rate}</update_rate>
       <visualize>0</visualize>
     </sensor>
     <sensor name="${camera_name}depth" type="depth">
       <camera name="${camera_name}">
         <horizontal_fov>${85.2*deg_to_rad}</horizontal_fov>
         <image>
           <width>1280</width>
           <height>720</height>
         </image>
         <clip>
           <near>0.1</near>
           <far>100</far>
         </clip>
         <noise>
           <type>gaussian</type>
           <mean>0.0</mean>
           <stddev>0.100</stddev>
         </noise>
       </camera>
       <always_on></always_on>
       <update_rate>${update_rate}</update_rate>
       <visualize>0</visualize>
     </sensor>
   </gazebo>

   <gazebo>
     <plugin name="${camera_name}_controller" filename="librealsense_gazebo_plugin.so">
       <prefix>${camera_name}</prefix>
       <depthUpdateRate>${update_rate}</depthUpdateRate>
       <colorUpdateRate>${update_rate}</colorUpdateRate>
       <infraredUpdateRate>${update_rate}</infraredUpdateRate>
       <depthTopicName>/${camera_name}/${prefix_topic}/depth/image_raw</depthTopicName>
       <depthCameraInfoTopicName>/${camera_name}/${prefix_topic}/depth/camera_info</depthCameraInfoTopicName>
       <colorTopicName>/${camera_name}/${prefix_topic}/color/image_raw</colorTopicName>
       <colorCameraInfoTopicName>/${camera_name}/${prefix_topic}/color/camera_info</colorCameraInfoTopicName>
       <infrared1TopicName>/${camera_name}/${prefix_topic}/infra1/image_raw</infrared1TopicName>
       <infrared1CameraInfoTopicName>/${camera_name}/${prefix_topic}/infra1/camera_info</infrared1CameraInfoTopicName>
       <infrared2TopicName>/${camera_name}/${prefix_topic}/infra2/image_raw</infrared2TopicName>
       <infrared2CameraInfoTopicName>/${camera_name}/${prefix_topic}/infra2/camera_info</infrared2CameraInfoTopicName>
       <colorOpticalframeName>${color_optical_frame}</colorOpticalframeName>
       <depthOpticalframeName>${depth_optical_frame}</depthOpticalframeName>
       <infrared1OpticalframeName>${infrared1_optical_frame}</infrared1OpticalframeName>
       <infrared2OpticalframeName>${infrared2_optical_frame}</infrared2OpticalframeName>
       <rangeMinDepth>0.105</rangeMinDepth>
       <rangeMaxDepth>10.0</rangeMaxDepth>
       <pointCloud>true</pointCloud>
       <pointCloudTopicName>/${camera_name}/${prefix_topic}/depth/points</pointCloudTopicName>
       <pointCloudCutoff>0.105</pointCloudCutoff>
     </plugin>
   </gazebo>
  </xacro:macro>


</robot>
